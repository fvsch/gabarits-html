/* =======================================
 * FEUILLE DE STYLES DES GABARITS HTML/CSS
 * © Florens Verschelde pour Elephorm & Alsacreations.com
 * Licence: https://creativecommons.org/licenses/by/2.0/fr/
 * ======================================= */

/* Page */

body {
	/* Gestion du padding du body et de certains conteneurs  */
	--largeur-max-body: 640px;
	--padding-body: 0px;
	--padding-entete: 20px;
	--padding-pied: 20px;

	/* Centrage de la page avec 'max-width' et les marges automatiques */
	max-width: var(--largeur-max-body);
	margin-inline: auto;
	padding: var(--padding-body);

	/*
	On utilise une grille CSS pour la mise en page globale de la page.
	Pour commencer, sur petit écran on utilise une grille avec une seule
	colonne de contenu de pleine largeur, et des zones nommées apparaissant
	les unes sous les autres (chaque zone est dans une nouvelle ligne).
	*/
	display: grid;
	grid-template-columns: 1fr;
	grid-template-areas: "entete" "navigation" "contenu" "pied";
}

@media (width >= 600px) {
	body {
		--padding-body: 0px 20px;
		--padding-entete: 20px 0px;
		--padding-pied: 20px 0px;
	}
}

@media (width >= 900px) {
	body {
		--largeur-max-body: 960px;
		--padding-body: 0px 40px;
		--padding-entete: 30px 0px;
		--padding-pied: 20px 0px;

		/*
		Sur un écran plus large, en passe en deux colonnes, une de largeur
		fixe ('220px') et l'autre prenant tout l'espace restant ('1fr').

		Les zones nommées "entete" et "pied" sont ensuite définies comme couvrant
		les deux colonnes. De sorte que les colonnes de la grille sont utilisées
		uniquement pour la mise en page de la navigation et du contenu principal.

		Une autre option de mise en page serait d'avoir un conteneur regroupant
		uniquement la navigation et le contenu principal, et d'utiliser une
		grille CSS ou bien Flexbox ('display: flex') sur ce conteneur. Pour un
		exemple de cette méthode alternative, voir le gabarit 07.
		*/
		grid-template-columns: 220px 1fr;
		grid-template-areas: "entete entete" "navigation contenu" "pied pied";
		gap: 0 20px;
	}
}

/* En-tête */

#entete {
	grid-area: entete;
	display: flex;
	flex-direction: column;
	gap: 20px;
	padding: var(--padding-entete);

	@media (width >= 600px) {
		flex-direction: row;
		align-items: center;
	}
}

#entete img {
	display: block;
	flex-shrink: 0;
	background-color: #fff;
	box-shadow: 0 1px 4px #0008;
}

#entete h1 {
	margin: 0;
	font-size: 2rem;
	line-height: 1.2;

	@media (width >= 600px) {
		font-size: 2.4rem;
	}
}

#entete p {
	margin: 4px 0;
}

/* Navigation */

#navigation {
	grid-area: navigation;
	container-type: inline-size;

	/* Les variables CSS de couleur utilisées dans cette mise en page sont
	définies dans base.css */
	background-color: var(--fond-plus-sombre);

	@media (width < 900px) {
		margin-bottom: 20px;
	}
}

#navigation ul {
	/* Pour l'explication de la mise en page de la navigation avec les
	"container queries", voir les commentaires dans modele04.css */
	display: flex;
	flex-direction: column;
	gap: 4px;
	margin: 0;
	padding: 20px 10px;
	list-style: none;

	@container (width >= 320px) {
		flex-direction: row;
		flex-wrap: wrap;
		align-items: center;
		padding-block: 10px;
	}
}

#navigation a {
	display: block;
	padding: 8px 12px;
	border-radius: 4px;
	line-height: 1.5;
	text-decoration: none;
	color: var(--texte-clair-lien);
}

#navigation a:hover,
#navigation a:focus {
	background-color: #000;
}

/* Contenu principal */

#contenu {
	grid-area: contenu;
	position: relative;
	padding: 20px;
	color: var(--texte-sombre);
	background-color: var(--fond-clair);
}

#contenu > :first-child {
	margin-top: 0;
}

#contenu p,
#contenu li {
	line-height: 1.5;
}

/* Pied de page */

#pied {
	grid-area: pied;
	padding: var(--padding-pied);
	font-size: 0.75rem;
	line-height: 1.5;
	color: var(--texte-clair-secondaire);
}

#pied > * {
	margin-block: 0;
}

#pied > * + * {
	margin-top: 0.5em;
}
